# Задача №45. Два различных натуральных числа n и m называются
# дружественными, если сумма делителей числа n(включая 1, но исключая
# само n) равна числу m и наоборот. Например, 220 и 284 – дружественные
# числа. По данному числу k выведите все пары дружественных чисел, каждое
# из которых не превосходит k. Программа получает на вход одно натуральное
# число k, не превосходящее 105. Программа должна вывести все пары
# дружественных чисел, каждое из которых не превосходит k. Пары необходимо
# выводить по одной в строке, разделяя пробелами. Каждая пара должна быть
# выведена только один раз(перестановка чисел новую пару не дает).
# Ввод: 300
# Вывод: 220 284
# Пример: Возьмём 2 числа 220 и 284. Найдём их делители
# Делители 220 – (1, 2, 4, 5, 10, 11, 20, 22, 44, 55, 110)
# 1 + 2 + 4 + 5 + 10 + 11 + 20 + 22 + 44 + 55 + 110 = 284
# Делители 284 – (1, 2, 4, 71, 142)
# 1 + 2 + 4 + 71 + 142 = 220


def find_sum_of_div(n):
    sum_n = 1
    for div in range(2, int(n ** 0.5) + 1):
        if n % div == 0:
            if div == n / div:
                sum_n += div
            else:
                sum_n += div + n // div
    return sum_n


def find_friendly_pairs(k_num):
    list_res = []
    for first_num in range(2, k_num + 1):
        second_num = find_sum_of_div(first_num)
        if first_num == find_sum_of_div(second_num) and first_num > second_num:
            list_res.append((first_num, second_num))
    return list_res


k = input('Введите число k > 1: ')
while not (k.isdigit() and int(k) > 1):
    print('Некорректный ввод')
    k = input('Введите число k > 1: ')

k = int(k)
print(*find_friendly_pairs(k), sep='\n')
